<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>siam-parent</artifactId>
        <groupId>com.siam</groupId>
        <version>1.1</version>
        <relativePath>../siam-parent/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>siam-zuul</artifactId>

    <name>siam-zuul</name>
    <url>https://www.siamit.cn</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <!-- 引入公共配置模块API -->
        <dependency>
            <groupId>com.siam</groupId>
            <artifactId>siam-common</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- 引入用户模块API -->
        <dependency>
            <groupId>com.siam</groupId>
            <artifactId>user-api</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- 引入商家模块API -->
        <dependency>
            <groupId>com.siam</groupId>
            <artifactId>merchant-api</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- 引入骑手模块API -->
        <dependency>
            <groupId>com.siam</groupId>
            <artifactId>rider-api</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- 整合Eureka注册中心 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <version>2.1.2.RELEASE</version>
        </dependency>

        <!-- 整合Zuul网关 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
            <version>2.1.2.RELEASE</version>
        </dependency>

        <!-- 升级servo监控版本，解决zuul模块间隔性抛出错误 -->
        <dependency>
            <groupId>com.netflix.servo</groupId>
            <artifactId>servo-core</artifactId>
            <version>0.12.7</version>
        </dependency>

        <!-- 整合Actuator监控依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>2.3.3.RELEASE</version>
        </dependency>

        <!-- 整合prometheus -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>1.5.4</version>
        </dependency>

        <!-- 整合logstash -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>6.6</version>
        </dependency>
    </dependencies>

    <!--build内容也需要做替换，因为默认的spring-boot-maven-plugin这种方式，等到后期打包的时候他会一直提示你，你引入的依赖不存在！-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.7.2</version>
                <configuration>
                    <!--  指定该Main Class为全局的唯一入口 -->
                    <mainClass>com.siam.package_zuul.ZuulApplication</mainClass>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>