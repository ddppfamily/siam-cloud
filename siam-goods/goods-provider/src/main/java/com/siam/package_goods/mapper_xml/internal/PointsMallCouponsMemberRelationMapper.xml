<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.siam.package_goods.mapper.internal.PointsMallCouponsMemberRelationMapper" >
  <resultMap id="BaseResultMap" type="com.siam.package_goods.entity.internal.PointsMallCouponsMemberRelation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="coupons_id" property="couponsId" jdbcType="INTEGER" />
    <result column="coupons_name" property="couponsName" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="is_used" property="isUsed" jdbcType="BIT" />
    <result column="is_expired" property="isExpired" jdbcType="BIT" />
    <result column="is_valid" property="isValid" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="CustomResultMap" type="java.util.Map" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="coupons_id" property="couponsId" jdbcType="INTEGER" />
    <result column="coupons_name" property="couponsName" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="is_used" property="isUsed" jdbcType="BIT" />
    <result column="is_expired" property="isExpired" jdbcType="BIT" />
    <result column="is_valid" property="isValid" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, coupons_id, coupons_name, member_id, start_time, end_time, is_used, is_expired,
    is_valid, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.siam.package_goods.model.example.CouponsMemberRelationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_points_mall_coupons_member_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_points_mall_coupons_member_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_points_mall_coupons_member_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.siam.package_goods.model.example.CouponsMemberRelationExample" >
    delete from tb_points_mall_coupons_member_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insertSelective" parameterType="com.siam.package_goods.entity.internal.PointsMallCouponsMemberRelation" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_points_mall_coupons_member_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="couponsId != null" >
        coupons_id,
      </if>
      <if test="couponsName != null" >
        coupons_name,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="isUsed != null" >
        is_used,
      </if>
      <if test="isExpired != null" >
        is_expired,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="couponsId != null" >
        #{couponsId,jdbcType=INTEGER},
      </if>
      <if test="couponsName != null" >
        #{couponsName,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isUsed != null" >
        #{isUsed,jdbcType=BIT},
      </if>
      <if test="isExpired != null" >
        #{isExpired,jdbcType=BIT},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.siam.package_goods.model.example.CouponsMemberRelationExample" resultType="java.lang.Integer" >
    select count(*) from tb_points_mall_coupons_member_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_points_mall_coupons_member_relation
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.couponsId != null" >
        coupons_id = #{record.couponsId,jdbcType=INTEGER},
      </if>
      <if test="record.couponsName != null" >
        coupons_name = #{record.couponsName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isUsed != null" >
        is_used = #{record.isUsed,jdbcType=BIT},
      </if>
      <if test="record.isExpired != null" >
        is_expired = #{record.isExpired,jdbcType=BIT},
      </if>
      <if test="record.isValid != null" >
        is_valid = #{record.isValid,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_points_mall_coupons_member_relation
    set id = #{record.id,jdbcType=INTEGER},
    coupons_id = #{record.couponsId,jdbcType=INTEGER},
    coupons_name = #{record.couponsName,jdbcType=VARCHAR},
    member_id = #{record.memberId,jdbcType=INTEGER},
    start_time = #{record.startTime,jdbcType=TIMESTAMP},
    end_time = #{record.endTime,jdbcType=TIMESTAMP},
    is_used = #{record.isUsed,jdbcType=BIT},
    is_expired = #{record.isExpired,jdbcType=BIT},
    is_valid = #{record.isValid,jdbcType=BIT},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.siam.package_goods.entity.internal.PointsMallCouponsMemberRelation" >
    update tb_points_mall_coupons_member_relation
    <set >
      <if test="couponsId != null" >
        coupons_id = #{couponsId,jdbcType=INTEGER},
      </if>
      <if test="couponsName != null" >
        coupons_name = #{couponsName,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isUsed != null" >
        is_used = #{isUsed,jdbcType=BIT},
      </if>
      <if test="isExpired != null" >
        is_expired = #{isExpired,jdbcType=BIT},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.siam.package_goods.entity.internal.PointsMallCouponsMemberRelation" >
    update tb_points_mall_coupons_member_relation
    set coupons_id = #{couponsId,jdbcType=INTEGER},
      coupons_name = #{couponsName,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      is_used = #{isUsed,jdbcType=BIT},
      is_expired = #{isExpired,jdbcType=BIT},
      is_valid = #{isValid,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>